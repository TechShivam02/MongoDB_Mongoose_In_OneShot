C:\Users\Shivam Kumar>mongosh
Current Mongosh Log ID: 63d0b8f83ffe3f38175426d1
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.6.2
Using MongoDB:          6.0.4
Using Mongosh:          1.6.2

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2023-01-25T01:07:38.971+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

------
   Enable MongoDB's free cloud-based monitoring service, which will then receive and display
   metrics about your deployment (disk utilization, CPU, operation statistics, etc).

   The monitoring data will be available on a MongoDB website with a unique URL accessible to you
   and anyone you share the URL with. MongoDB may use this information to make product
   improvements and to suggest MongoDB products and deployment options to you.

   To enable free monitoring, run the following command: db.enableFreeMonitoring()
   To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
------

test> show dbs
admin   40.00 KiB
config  84.00 KiB
local   40.00 KiB
test> use shopb
switched to db shopb
shopb> db
shopb
shopb>

shopb> db.products.insertOne({id:1 , name:"Pen" , price : 5 })
{
  acknowledged: true,
  insertedId: ObjectId("63d0bb337598618412cf0189")
}
shopb> show collections
products
shopb> db.products.insertOne({id:2 , name:"Pencil" , price : 3 })
{
  acknowledged: true,
  insertedId: ObjectId("63d0bb9c7598618412cf018a")
}

// db.products.insertMany( [ {id:1 , name:"Pen" , price : 5 } ,  {id:2 , name:"Pfvfven" , price : 35 } ,  {id:3 , name:"vfvPen" , price : 15 } ])
// use array of objects


shopb> show collections
products
shopb> db.products.find()
[
  {
    _id: ObjectId("63d0bb337598618412cf0189"),
    id: 1,
    name: 'Pen',
    price: 5
  },
  {
    _id: ObjectId("63d0bb9c7598618412cf018a"),
    id: 2,
    name: 'Pencil',
    price: 3
  }
]

// db.products.findOne()   // it will display only one , of no of present // db.products.findOne({name : "Pencil"})  // it will show only 1 entry of name : Pencil
shopb> db.products.find({})
[
  {
    _id: ObjectId("63d0bb337598618412cf0189"),
    id: 1,
    name: 'Pen',
    price: 5
  },
  {
    _id: ObjectId("63d0bb9c7598618412cf018a"),
    id: 2,
    name: 'Pencil',
    price: 3
  }
]
shopb> db.products.find({name:"Pen"})
[
  {
    _id: ObjectId("63d0bb337598618412cf0189"),
    id: 1,
    name: 'Pen',
    price: 5
  }
]
shopb> db.products.find({name:"Pencil"})
[
  {
    _id: ObjectId("63d0bb9c7598618412cf018a"),
    id: 2,
    name: 'Pencil',
    price: 3
  }
]
shopb> db.products.find({name:"Pel"})
// No Output
















shopb> db.products.find()
[
  {
    _id: ObjectId("63d0bb337598618412cf0189"),
    id: 1,
    name: 'Pen',
    price: 5
  },
  {
    _id: ObjectId("63d0bb9c7598618412cf018a"),
    id: 2,
    name: 'Pencil',
    price: 3
  }
]
shopb> db.products.find({price : { $gt : 2 } })
[
  {
    _id: ObjectId("63d0bb337598618412cf0189"),
    id: 1,
    name: 'Pen',
    price: 5
  },
  {
    _id: ObjectId("63d0bb9c7598618412cf018a"),
    id: 2,
    name: 'Pencil',
    price: 3
  }
]
shopb> db.products.find({price : { $gt : 2 } }, {id:1})
[
  { _id: ObjectId("63d0bb337598618412cf0189"), id: 1 },
  { _id: ObjectId("63d0bb9c7598618412cf018a"), id: 2 }
]
shopb> db.products.find({price : { $gt : 2 } }, {price : 1 , id : 1})
[
  { _id: ObjectId("63d0bb337598618412cf0189"), id: 1, price: 5 },
  { _id: ObjectId("63d0bb9c7598618412cf018a"), id: 2, price: 3 }
]
shopb> db.products.find({price : { $gt : 2 } }, {price : 1 ,id:1 , _id : 1})
[
  { _id: ObjectId("63d0bb337598618412cf0189"), id: 1, price: 5 },
  { _id: ObjectId("63d0bb9c7598618412cf018a"), id: 2, price: 3 }
]
shopb> db.products.find({price : { $gt : 2 } }, {price : 1 ,id:1 , _id : 0})
[ { id: 1, price: 5 }, { id: 2, price: 3 } ]
shopb> db.products.find({price : { $gt : 2 } }, {name : 1, _id : 0})
[ { name: 'Pen' }, { name: 'Pencil' } ]
shopb> db.products.find({price : { $gt : 2 } }, {name : 1,price : 1 , _id : 0})
[ { name: 'Pen', price: 5 }, { name: 'Pencil', price: 3 } ]
shopb>

shopb> db.products.find()
[
  {
    _id: ObjectId("63d0bb337598618412cf0189"),
    id: 1,
    name: 'Pen',
    price: 5
  },
  {
    _id: ObjectId("63d0bb9c7598618412cf018a"),
    id: 2,
    name: 'Pencil',
    price: 3
  }
]


shopb> db.products.updateOne({id:1} , {$set : {stock : 32} })
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
shopb> db.products.find()
[
  {
    _id: ObjectId("63d0bb337598618412cf0189"),
    id: 1,
    name: 'Pen',
    price: 5,
    stock: 32
  },
  {
    _id: ObjectId("63d0bb9c7598618412cf018a"),
    id: 2,
    name: 'Pencil',
    price: 3
  }
]

// db.products.updateOne({find} , {newvalue to be updated with})  // db.products.updateOne({name : "Pencil"} , {$set : {name : "PenPen"} })  // it will update only which ever with name Pencil it will find first 






 
// // db.products.updateMany({name : "Pencil"} , {$set : {name : "PenPen"} })   // to update all , which ever of name Pencil , it will set to PenPen

shopb> db.products.updateOne({id:2} , {$set : {stock : 12}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
shopb> db.products.find()
[
  {
    _id: ObjectId("63d0bb337598618412cf0189"),
    id: 1,
    name: 'Pen',
    price: 5,
    stock: 32
  },
  {
    _id: ObjectId("63d0bb9c7598618412cf018a"),
    id: 2,
    name: 'Pencil',
    price: 3,
    stock: 12
  }
]



















shopb> db.products.find()
[
  {
    _id: ObjectId("63d0bb337598618412cf0189"),
    id: 1,
    name: 'Pen',
    price: 5,
    stock: 32
  },
  {
    _id: ObjectId("63d0bb9c7598618412cf018a"),
    id: 2,
    name: 'Pencil',
    price: 3,
    stock: 12
  }
]



//db.products.deleteOne({})  // it will delete the first entry
// db.products.deleteMany({})  // it will delete all the entries



shopb> db.products.deleteOne({name : "Pencil"})
{ acknowledged: true, deletedCount: 1 }
shopb> db.products.find()
[
  {
    _id: ObjectId("63d0bb337598618412cf0189"),
    id: 1,
    name: 'Pen',
    price: 5,
    stock: 32
  }
]
shopb>



hemloff feefe


db.products.insertOne(
	{
	id:3,
	name : "rubber",
	price : 4,
	stock : 43,

	reviews : [
		
	 { custname : "Sally",
	    rating : 5,
	    review : "Best Rubber Ever "
	 }
 
	 ,

	  { custname : "John",
	    rating : 4,
	    review : "Nice Rubber "
	  }

       ]

     }

)



	